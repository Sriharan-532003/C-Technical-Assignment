#include <iostream>
#include <thread>
#include <mutex>
#include <condition_variable>

std::mutex mtx;
std::condition_variable cv;
bool isEvenTurn = true;

void printEven()
{
    for (int i = 0; i <= 10; i += 2)
    {
        std::unique_lock<std::mutex> lock(mtx);
        cv.wait(lock, [] { return isEvenTurn; });

        std::cout << "Even: " << i << std::endl;

        isEvenTurn = false;
        cv.notify_one();
    }
}

void printOdd()
{
    for (int i = 1; i < 10; i += 2)
    {
        std::unique_lock<std::mutex> lock(mtx);
        cv.wait(lock, [] { return !isEvenTurn; });

        std::cout << "Odd: " << i << std::endl;

        isEvenTurn = true;
        cv.notify_one();
    }
}
